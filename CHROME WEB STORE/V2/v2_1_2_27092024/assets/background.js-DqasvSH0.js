import m from"./ExtPay.js-BJirVD8P.js";import"./_commonjsHelpers-C4iS2aBk.js";const u="samplewizard-subscription",t=m(u);t.startBackground();t.getUser().then(e=>{});t.onPaid.addListener(e=>{console.log("user paid!"),chrome.runtime.sendMessage({type:"user-paid",data:e})});chrome.runtime.onMessage.addListener(async e=>{switch(e.type){case"start-recording":chrome.action.setBadgeBackgroundColor({color:"red"}),chrome.action.setBadgeText({text:" "});const{id:r,title:n}=await c();e.mute&&(await chrome.tabs.update(r,{muted:!0}),console.log("Tab muted"));const o=await chrome.runtime.getContexts({contextTypes:["OFFSCREEN_DOCUMENT"]});if(o.length)o[0].documentUrl.endsWith("#recording");else try{await chrome.offscreen.createDocument({url:"offscreen.html",reasons:["USER_MEDIA"],justification:"Recording from chrome.tabCapture API"});const a=await chrome.runtime.getContexts({contextTypes:["OFFSCREEN_DOCUMENT"]})}catch(a){console.log(a)}const s=await chrome.tabCapture.getMediaStreamId({targetTabId:r});chrome.runtime.sendMessage({type:"start-offscreen-recording",target:"offscreen",data:{streamId:s,tabName:n,mute:e.mute,trim:e.trim}});break;case"stop-recording":chrome.runtime.sendMessage({type:"stop-offscreen-recording",target:"offscreen"}),chrome.action.setBadgeText({text:""});const{id:i}=await c();await chrome.tabs.update(i,{muted:!1});break;case"save-recording":try{await chrome.storage.local.set({new_recording:{recording:e.data.recording,tabName:e.data.tabName}}),await chrome.offscreen.closeDocument(),chrome.runtime.sendMessage({type:"recording-saved"})}catch(a){console.log(a)}break;case"manage-subscription":t.openPaymentPage();break;case"fetch-user":const d=await t.getUser();chrome.runtime.sendMessage({type:"set-user-data",data:d})}});const c=async()=>{let e={active:!0},[r]=await chrome.tabs.query(e);return r};
